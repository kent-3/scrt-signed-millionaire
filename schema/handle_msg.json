{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "set_input_a"
      ],
      "properties": {
        "set_input_a": {
          "type": "object",
          "required": [
            "input",
            "message",
            "pub_key",
            "signature"
          ],
          "properties": {
            "input": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "message": {
              "$ref": "#/definitions/Binary"
            },
            "pub_key": {
              "$ref": "#/definitions/Binary"
            },
            "signature": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_input_b"
      ],
      "properties": {
        "set_input_b": {
          "type": "object",
          "required": [
            "input",
            "message",
            "pub_key",
            "signature"
          ],
          "properties": {
            "input": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "message": {
              "$ref": "#/definitions/Binary"
            },
            "pub_key": {
              "$ref": "#/definitions/Binary"
            },
            "signature": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "compare"
      ],
      "properties": {
        "compare": {
          "type": "object"
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    }
  }
}
